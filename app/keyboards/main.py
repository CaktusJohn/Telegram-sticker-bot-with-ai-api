from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
menu = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ", callback_data="try_free")],
    [InlineKeyboardButton(text="–°–æ–∑–¥–∞—Ç—å —Ä–µ—Ñ. —Å—Å—ã–ª–∫—É", callback_data="ref_program")],
    [InlineKeyboardButton(text="–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support")]
])

from aiogram.utils.keyboard import InlineKeyboardBuilder

# –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —à–∞–±–ª–æ–Ω–æ–≤ –∏–∑ —Å—Ö–µ–º—ã
CATEGORIES = [
    "üòÄ –≠–º–æ—Ü–∏–∏ –∏ —Ä–µ–∞–∫—Ü–∏–∏", "üé≠ –ú–µ–º—ã –∏ –ø—Ä–∏–∫–æ–ª—ã", "üé¨ –§–∏–ª—å–º—ã –∏ —Å–µ—Ä–∏–∞–ª—ã",
    "üéµ –ú—É–∑—ã–∫–∞ –∏ —Ç–∞–Ω—Ü—ã", "üèÜ –°–ø–æ—Ä—Ç", "üéÆ –ò–≥—Ä—ã",
    "üíº –†–∞–±–æ—Ç–∞ –∏ –æ—Ñ–∏—Å", "üéâ –ü—Ä–∞–∑–¥–Ω–∏–∫–∏"
]

def get_categories_keyboard(page: int = 0, items_per_page: int = 4):
    builder = InlineKeyboardBuilder()
    start_index = page * items_per_page
    end_index = start_index + items_per_page
    
    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü
    total_pages = (len(CATEGORIES) + items_per_page - 1) // items_per_page

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    for category in CATEGORIES[start_index:end_index]:
        builder.button(text=category, callback_data=f"cat_select_{category}")
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    nav_buttons = []
    if page > 0:
        nav_buttons.append(InlineKeyboardButton(text=f"‚¨ÖÔ∏è –ù–∞–∑–∞–¥ ({page}/{total_pages})", callback_data=f"cat_page_{page-1}"))
    if end_index < len(CATEGORIES):
        nav_buttons.append(InlineKeyboardButton(text=f"–í–ø–µ—Ä–µ–¥ ({page+2}/{total_pages}) ‚û°Ô∏è", callback_data=f"cat_page_{page+1}"))
    
    # –í—ã—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥—ã
    builder.adjust(1) # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ —Ä—è–¥—É
    if nav_buttons:
        builder.row(*nav_buttons) # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤ –æ–¥–Ω–æ–º —Ä—è–¥—É
        
    return builder.as_markup()


def get_template_navigation_keyboard(page: int, total_pages: int, category_id: str):
    builder = InlineKeyboardBuilder()
    
    # –†—è–¥ 1: –ù–∞–≤–∏–≥–∞—Ü–∏—è ‚¨ÖÔ∏è 1/10 ‚û°Ô∏è
    nav_row = []
    if page > 0:
        nav_row.append(InlineKeyboardButton(text="‚¨ÖÔ∏è", callback_data=f"tpl_page_{page-1}"))
    
    nav_row.append(InlineKeyboardButton(text=f"{page+1}/{total_pages}", callback_data="noop")) # –ö–Ω–æ–ø–∫–∞-—Å—á–µ—Ç—á–∏–∫

    if page < total_pages - 1:
        nav_row.append(InlineKeyboardButton(text="‚û°Ô∏è", callback_data=f"tpl_page_{page+1}"))

    if nav_row:
        builder.row(*nav_row)

    # –†—è–¥ 2: –í—ã–±–æ—Ä —à–∞–±–ª–æ–Ω–∞
    builder.row(InlineKeyboardButton(text="‚úÖ –í—ã–±—Ä–∞—Ç—å —ç—Ç–æ—Ç —à–∞–±–ª–æ–Ω", callback_data=f"tpl_select_{page}"))

    # –†—è–¥ 3: –ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º", callback_data="back_to_categories"))

    return builder.as_markup()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è "—Ñ–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ"
photo_validated_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å—Ç–∏–∫–µ—Ä–æ–≤", callback_data="select_category")],
    [InlineKeyboardButton(text="–ú–æ–∏ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∏", callback_data="my_stickerpacks")],
    [InlineKeyboardButton(text="–ó–∞–≥—Ä—É–∑–∏—Ç—å –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª", callback_data="upload_another_photo")],
    [InlineKeyboardButton(text="–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
])
